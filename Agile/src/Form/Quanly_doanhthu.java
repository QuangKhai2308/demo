/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DropMode;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.jdbc.JDBCCategoryDataset;

/**
 *
 * @author ADMIN
 */
public class Quanly_doanhthu extends javax.swing.JInternalFrame {

    /**
     * Creates new form Quanly_doanhthu
     */
    String user = "sa";
    String pass = "23082001";
    Connection conn;
    String url = "jdbc:sqlserver://localhost:1433;databaseName = QLBH";
    DefaultTableModel model;

    public Quanly_doanhthu() {
        initComponents();

        conn = getConnection();
        d();
        m();
        y();
        setcolor();
    }

    protected Connection getConnection() {
        Connection conn = null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(url, user, pass);
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return conn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        DaysPanel = new javax.swing.JPanel();
        jPaneldays = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn12 = new javax.swing.JButton();
        Panelimage = new javax.swing.JPanel();
        lblImageDay = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblSL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDays = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMonth = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanelThang = new javax.swing.JPanel();
        btnt2018 = new javax.swing.JButton();
        btnt2019 = new javax.swing.JButton();
        btnt2020 = new javax.swing.JButton();
        btnt2021 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblYear = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanelNam = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jPanel6.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản Lí Doanh Thu");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(640, 460));

        jPaneldays.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPaneldaysLayout = new javax.swing.GroupLayout(jPaneldays);
        jPaneldays.setLayout(jPaneldaysLayout);
        jPaneldaysLayout.setHorizontalGroup(
            jPaneldaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPaneldaysLayout.setVerticalGroup(
            jPaneldaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );

        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn10.setText("10");
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        btn11.setText("11");
        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });

        btn12.setText("12");
        btn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn12ActionPerformed(evt);
            }
        });

        Panelimage.setBackground(new java.awt.Color(204, 204, 204));
        Panelimage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout PanelimageLayout = new javax.swing.GroupLayout(Panelimage);
        Panelimage.setLayout(PanelimageLayout);
        PanelimageLayout.setHorizontalGroup(
            PanelimageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImageDay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );
        PanelimageLayout.setVerticalGroup(
            PanelimageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImageDay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Sản phẩm bán chạy");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel3.setText("Số lượng bán:");

        lblSL.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        tblDays.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblDays.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ngày", "Tổng hóa đơn", "Tổng sản phẩm bán", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDays);

        javax.swing.GroupLayout DaysPanelLayout = new javax.swing.GroupLayout(DaysPanel);
        DaysPanel.setLayout(DaysPanelLayout);
        DaysPanelLayout.setHorizontalGroup(
            DaysPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DaysPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(DaysPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPaneldays, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, DaysPanelLayout.createSequentialGroup()
                        .addComponent(btn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn12)))
                .addGap(96, 96, 96)
                .addGroup(DaysPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DaysPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSL, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DaysPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Panelimage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(76, 76, 76))
            .addComponent(jScrollPane1)
        );
        DaysPanelLayout.setVerticalGroup(
            DaysPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DaysPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DaysPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DaysPanelLayout.createSequentialGroup()
                        .addGroup(DaysPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn1)
                            .addComponent(btn2)
                            .addComponent(btn3)
                            .addComponent(btn4)
                            .addComponent(btn5)
                            .addComponent(btn6)
                            .addComponent(btn7)
                            .addComponent(btn8)
                            .addComponent(btn9)
                            .addComponent(btn10)
                            .addComponent(btn11)
                            .addComponent(btn12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPaneldays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DaysPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Panelimage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(DaysPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(lblSL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(DaysPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(DaysPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ngày", jPanel1);

        jPanel3.setPreferredSize(new java.awt.Dimension(640, 460));
        jPanel3.setRequestFocusEnabled(false);

        tblMonth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblMonth.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tháng", "Tổng hóa đơn", "Tổng sản phẩm bán", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMonth);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Sản phẩm bán chạy");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel6.setText("Số lượng bán:");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        jPanelThang.setBackground(new java.awt.Color(204, 204, 204));
        jPanelThang.setPreferredSize(new java.awt.Dimension(552, 239));

        javax.swing.GroupLayout jPanelThangLayout = new javax.swing.GroupLayout(jPanelThang);
        jPanelThang.setLayout(jPanelThangLayout);
        jPanelThangLayout.setHorizontalGroup(
            jPanelThangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        jPanelThangLayout.setVerticalGroup(
            jPanelThangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );

        btnt2018.setText("2018");
        btnt2018.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnt2018ActionPerformed(evt);
            }
        });

        btnt2019.setText("2019");
        btnt2019.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnt2019ActionPerformed(evt);
            }
        });

        btnt2020.setText("2020");
        btnt2020.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnt2020ActionPerformed(evt);
            }
        });

        btnt2021.setText("2021");
        btnt2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnt2021ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnt2018)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnt2019)
                                .addGap(18, 18, 18)
                                .addComponent(btnt2020)
                                .addGap(18, 18, 18)
                                .addComponent(btnt2021)))
                        .addGap(92, 92, 92)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(103, 140, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnt2018)
                            .addComponent(btnt2019)
                            .addComponent(btnt2020)
                            .addComponent(btnt2021))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Tháng", jPanel3);

        tblYear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblYear.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Năm", "Tổng hóa đơn", "Tổng sản phẩm bán", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblYear);

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel13.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Sản phẩm bán chạy");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        jLabel9.setText("Số lượng bán:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N

        jPanelNam.setBackground(new java.awt.Color(204, 204, 204));
        jPanelNam.setPreferredSize(new java.awt.Dimension(552, 239));

        javax.swing.GroupLayout jPanelNamLayout = new javax.swing.GroupLayout(jPanelNam);
        jPanelNam.setLayout(jPanelNamLayout);
        jPanelNamLayout.setHorizontalGroup(
            jPanelNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        jPanelNamLayout.setVerticalGroup(
            jPanelNamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(657, 657, 657)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanelNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 137, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanelNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Năm", jPanel4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 116, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane4.setViewportView(jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '1' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
            
            tblDays.setDropMode(DropMode.ON);
            
            try {
                String sql = "EXEC result_find ?";
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setString(1, btn1.getText());
                ps.execute();
                ResultSet rs = ps.getResultSet();
                while (rs.next()) {
                    Vector vector = new Vector();
                    vector.add(rs.getString(1));
                    vector.add(rs.getString(2));
                    vector.add(rs.getString(3));
                    vector.add(rs.getString(4));

                    model.addRow(vector);
                }
                tblDays.setModel(model);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        loadImageDay();
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // Bieu do
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '2' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }

        //Bang
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn2.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '3' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn3.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '4' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn4.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '5' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn5.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '6' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn6.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '7' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn7.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '8' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn8.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '9' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn9.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '10' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn10.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '11' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn11.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn12ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE '12' \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            String query = "EXEC result_find ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, btn12.getText());
            ps.execute();
            ResultSet rs = ps.getResultSet();
            
            tblDays.setDropMode(DropMode.ON);
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString(1));
                vector.add(rs.getString(2));
                vector.add(rs.getString(3));
                vector.add(rs.getString(4));

                model.addRow(vector);
            }
            tblDays.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn12ActionPerformed

    private void btnt2018ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnt2018ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT MONTH(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE YEAR(NGMUA) LIKE '2018' \n"
                    + "GROUP BY MONTH(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Tháng", "Tháng", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPanelThang.getWidth(), 321));
            jPanelThang.removeAll();
            jPanelThang.setLayout(new CardLayout());
            jPanelThang.add(chartPanel);
            jPanelThang.validate();
            jPanelThang.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnt2018ActionPerformed

    private void btnt2019ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnt2019ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT MONTH(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE YEAR(NGMUA) LIKE '2019' \n"
                    + "GROUP BY MONTH(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Tháng", "Tháng", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPanelThang.getWidth(), 321));
            jPanelThang.removeAll();
            jPanelThang.setLayout(new CardLayout());
            jPanelThang.add(chartPanel);
            jPanelThang.validate();
            jPanelThang.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnt2019ActionPerformed

    private void btnt2020ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnt2020ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT MONTH(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE YEAR(NGMUA) LIKE '2020' \n"
                    + "GROUP BY MONTH(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Tháng", "Tháng", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPanelThang.getWidth(), 321));
            jPanelThang.removeAll();
            jPanelThang.setLayout(new CardLayout());
            jPanelThang.add(chartPanel);
            jPanelThang.validate();
            jPanelThang.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnt2020ActionPerformed

    private void btnt2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnt2021ActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT MONTH(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE YEAR(NGMUA) LIKE '2021' \n"
                    + "GROUP BY MONTH(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Tháng", "Tháng", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPanelThang.getWidth(), 321));
            jPanelThang.removeAll();
            jPanelThang.setLayout(new CardLayout());
            jPanelThang.add(chartPanel);
            jPanelThang.validate();
            jPanelThang.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnt2021ActionPerformed
    protected void loadImageDay() {
        String query = "SELECT TOP 1 HOADON_CHITIET.ID_SP, SUM(HDCT.SOLUONG), IMAGES FROM HOADON_CHITIET AS HDCT\n"
                + "INNER JOIN SANPHAM ON HDCT.ID_SP = SANPHAM.ID_SP\n"
                + "WHERE DAY(NGAYMUA) = DAY(GETDATE())\n"
                + "GROUP BY HDCT.ID_SP, IMAGES\n"
                + "ORDER BY SUM(HDCT.SOLUONG) DESC";
        int w = lblImageDay.getWidth();
        int h = lblImageDay.getHeight();
        try {
            PreparedStatement ps = conn.prepareStatement(query);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String Link = rs.getString(3);
                ImageIcon icon = new ImageIcon(Link);
                Image img = icon.getImage();
                Image new_img = img.getScaledInstance(168, 214, Image.SCALE_SMOOTH);
                ImageIcon s = new ImageIcon(new_img);
                lblImageDay.setIcon(s);
                System.out.println(Link);
                System.out.println(w);
                System.out.println(h);
                lblSL.setText(rs.getInt(2) + "");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void d() {
        try {
            String query = "SELECT DAY(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE MONTH(NGMUA) LIKE MONTH(GETDATE()) \n"
                    + "GROUP BY DAY(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Ngày", "Ngày", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPaneldays.getWidth(), 321));
            jPaneldays.removeAll();
            jPaneldays.setLayout(new CardLayout());
            jPaneldays.add(chartPanel);
            jPaneldays.validate();
            jPaneldays.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void m() {
        try {
            String query = " SELECT MONTH(NGMUA),SUM(TONGTIEN) FROM HOADON WHERE YEAR(NGMUA) LIKE YEAR(GETDATE()) \n"
                    + "GROUP BY MONTH(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Tháng", "Tháng", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPanelThang.getWidth(), 321));
            jPanelThang.removeAll();
            jPanelThang.setLayout(new CardLayout());
            jPanelThang.add(chartPanel);
            jPanelThang.validate();
            jPanelThang.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void y() {
        try {
            String query = "SELECT YEAR(NGMUA),SUM(TONGTIEN) FROM HOADON\n"
                    + "GROUP BY YEAR(NGMUA)";
            Connection javaconnect = null;
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(ConnecrDb(), query);
            JFreeChart chart = ChartFactory.createLineChart("Doanh Thu Năm", "Năm", "Số tiền", dataset, PlotOrientation.VERTICAL, false, true, true);

            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);

            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new Dimension(jPanelNam.getWidth(), 321));
            jPanelNam.removeAll();
            jPanelNam.setLayout(new CardLayout());
            jPanelNam.add(chartPanel);
            jPanelNam.validate();
            jPanelNam.repaint();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void setcolor() {
        btn1.setBackground(Color.pink);
        btn2.setBackground(Color.pink);
        btn3.setBackground(Color.pink);
        btn4.setBackground(Color.pink);
        btn5.setBackground(Color.pink);
        btn6.setBackground(Color.pink);
        btn7.setBackground(Color.pink);
        btn8.setBackground(Color.pink);
        btn9.setBackground(Color.pink);
        btn10.setBackground(Color.pink);
        btn11.setBackground(Color.pink);
        btn12.setBackground(Color.pink);
        DaysPanel.setBackground(Color.pink);

    }

    public Connection ConnecrDb() {
        Connection conn = null;
        String url = "jdbc:sqlserver://localhost:1433;databaseName = QLBH";
        try {
            String dbUsername = "sa", dbPassword = "23082001";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(
                    url,
                    dbUsername,
                    dbPassword
            );

        } catch (Exception e) {
            e.printStackTrace();
        }
        return conn;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DaysPanel;
    private javax.swing.JPanel Panelimage;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn12;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnt2018;
    private javax.swing.JButton btnt2019;
    private javax.swing.JButton btnt2020;
    private javax.swing.JButton btnt2021;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelNam;
    private javax.swing.JPanel jPanelThang;
    private javax.swing.JPanel jPaneldays;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblImageDay;
    private javax.swing.JLabel lblSL;
    private javax.swing.JTable tblDays;
    private javax.swing.JTable tblMonth;
    private javax.swing.JTable tblYear;
    // End of variables declaration//GEN-END:variables
}
